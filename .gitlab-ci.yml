stages:
  - Package
  - Build
  - Test

Tarball:
  stage: Package
  image: alpine:latest
  before_script:
    - apk add --no-cache git make perl
  script:
    - git submodule sync
    - git submodule update --init --recursive
    - bin/mkrelease.sh "$CI_COMMIT_REF_NAME"
    - bin/mkchecksum.sh "work/release/rakudo-star-$CI_COMMIT_REF_NAME.tar.gz"
  artifacts:
    paths:
      - work/release

Rakudo Star:
  stage: Build
  image: alpine:latest
  before_script:
    - apk add --no-cache bash build-base git perl
    - cd -- "$CI_PROJECT_DIR/work/build"
    - bin/mkchecksum.sh "work/release/rakudo-star-$CI_COMMIT_REF_NAME.tar.gz"
    - tar xzf "$CI_PROJECT_DIR/work/release/rakudo-star-$CI_COMMIT_REF_NAME.tar.gz"
  script:
    - cd -- "rakudo-star-$CI_COMMIT_REF_NAME"
    - perl Configure.pl --prefix="$CI_PROJECT_DIR/work/install" --backend=moar --gen-moar --make-install
  artifacts:
    paths:
      - work/build

Rakudo Test:
  stage: Test
  image: alpine:latest
  before_script:
    - apk add --no-cache make
  script:
    - make rakudo-test

Rakudo Spectest:
  stage: Test
  image: alpine:latest
  before_script:
    - apk add --no-cache make
  script:
    - make rakudo-spectest

Community Modules:
  stage: Test
  image: alpine:latest
  before_script:
    - apk add --no-cache build-base
  script:
    - make modules-test

# TODO: Release an updated Docker container
# TODO: Release the tarball to some Raku server
